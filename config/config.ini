; General settings control basic behavior of the plugin
;
; * writeCache - set to true to enable file caching, each extension
;   will also need a cachePath
;
; * cacheConfig - set to true to cache the parsed configuration data
;   so it doesn't get parsed on each request.
;
; * timestampFile - Set to true to use a timestampfile.  Using a
;   timestamp file means that each file will share a timestamp.
;   Additionally the helper will not glob the filesystem to find
;   combined assets.  When using timestampFile, you should also enable
;   the `timestamp` flag for each file extension.
;
[General]
timestampFile = false
writeCache = true
cacheConfig = false

; Define an extension type.
;
; _filters, _targets and other keys prefixed with this value
; are connected when the ini file is parsed.
;
; * cachePath - is where built files will be output
; * timestamp - Set to true to add a timestamp to build files.
; * paths - An array of paths where files used in builds can be found
;   Supports glob expressions.
; * filters - A list of filters to be applied to all build files
;   using this extension.
; * baseUrl - Set the base url this type of asset is served off of, good
;   for using with CDN's
[js]
baseUrl = http://cdn.example.com
timestamp = true
paths[] = WEBROOT/js/*
cachePath = WEBROOT/cache_js
filters[] = Sprockets
filters[] = YuiJs

; each target should have a section defining the files
; everything after js_* is considered the build file.
; all files included in the build are relative to the parent
; paths key.
;
; targets can include their own filters.
[js_libs.js]
files[] = jquery.js
files[] = mootools.js
files[] = class.js
filters[] = UglifyJs

; Create the CSS extension
[css]
paths[] = WEBROOT/css/*
cachePath = WEBROOT/cache_css

[css_all.css]
files[] = layout.css
filters[] = CssMinFilter
